library(readr)
merged_data <- read_csv("E:/merged_data.csv")
View(merged_data)
row.names(merged_data) <- merged_data$SK_ID_CURR
merged_data2 <- cbind(c(merged_data$SK_ID_CURR, merged_data))
View(merged_data2)
df <- merged_data[merged_data$SK_ID_CURR == 243191, ]
View(df)
lapply(df, FUN = function(x) length(unique(x)) > 1)
as.boolean(lapply(df, FUN = function(x) length(unique(x)) > 1))
as.logical(lapply(df, FUN = function(x) length(unique(x)) > 1))
df <- df[, as.logical(lapply(df, FUN = function(x) length(unique(x)) > 1))]
install.packages("tidyverse")
install.packages("magrittr")
library(readr)
bureau_balance <- read_csv("D:/Projets_Data_Science/Competitions/Kaggle/Home_Credit_Default_Risk/data/raw/bureau_balance.csv")
bbalance <- read_csv("../data/raw/bureau_balance.csv")
bureau <- read_csv("../data/raw/bureau.csv")
cc_balance <- read_csv("../data/raw/credit_card_balance.csv")
payments <- read_csv("../data/raw/installments_payments.csv")
pc_balance <- read_csv("../data/raw/POS_CASH_balance.csv")
prev <- read_csv("../data/raw/previous_application.csv")
tr <- read_csv("../data/raw/application_train.csv")
te <- read_csv("../data/raw/application_test.csv")
rm(bureau_balance)
# Generate features
fn <- funs(mean, sd, min, max, sum, n_distinct, .args = list(na.rm = TRUE))
library(dplyr)
# Generate features
fn <- funs(mean, sd, min, max, sum, n_distinct, .args = list(na.rm = TRUE))
sum_bbalance <- bbalance %>%
mutate_if(is.character, funs(factor(.) %>% as.integer)) %>%
group_by(SK_ID_BUREAU) %>%
summarise_all(fn)
View(sum_bbalance)
View(bbalance)
colnames(sum_bbalance)
library(readr)
tmp_bureau_data_df <- read_csv("E:/tmp_bureau_data_df.csv")
View(tmp_bureau_data_df)
colnames(tmp_bureau_data_df)
View(tr)
colnames(tr)
sort(colnames(tr))
home_related_features <- c("APARTMENTS_AVG", "APARTMENTS_MEDI", "APARTMENTS_MODE", "BASEMENTAREA_AVG", "BASEMENTAREA_MEDI",
"BASEMENTAREA_MODE", "COMMONAREA_AVG", "COMMONAREA_MEDI", "COMMONAREA_MODE", "ELEVATORS_AVG",
"ELEVATORS_MEDI", "ELEVATORS_MODE", "EMERGENCYSTATE_MODE", "ENTRANCES_AVG", "ENTRANCES_MEDI",
"ENTRANCES_MODE", "FLOORSMAX_AVG", "FLOORSMAX_MEDI", "FLOORSMAX_MODE", "FLOORSMIN_AVG",
"FLOORSMIN_MEDI", "FLOORSMIN_MODE", "FONDKAPREMONT_MODE", "HOUSETYPE_MODE", "LANDAREA_AVG",
"LANDAREA_MEDI", "LANDAREA_MODE", "LIVINGAPARTMENTS_AVG", "LIVINGAPARTMENTS_MEDI",
"LIVINGAPARTMENTS_MODE", "LIVINGAREA_AVG", "LIVINGAREA_MEDI", "LIVINGAREA_MODE",
"NONLIVINGAPARTMENTS_AVG", "NONLIVINGAPARTMENTS_MEDI", "NONLIVINGAPARTMENTS_MODE",
"NONLIVINGAREA_AVG", "NONLIVINGAREA_MEDI", "NONLIVINGAREA_MODE", "TOTALAREA_MODE",
"WALLSMATERIAL_MODE", "YEARS_BEGINEXPLUATATION_AVG", "YEARS_BEGINEXPLUATATION_MEDI",
"YEARS_BEGINEXPLUATATION_MODE", "YEARS_BUILD_AVG", "YEARS_BUILD_MEDI", "YEARS_BUILD_MODE")
tr2 <- select(tr, home_related_features)
View(tr2)
View(tr)
tr3 <- select(tr, c("EXT_SOURCE_1", "EXT_SOURCE_2", "EXT_SOURCE_3", "TARGET"))
tr3$EXT_SOURCE_1_-_EXT_SOURCE_2 <- tr3$EXT_SOURCE_1 - tr3$EXT_SOURCE_2
tr3$EXT_SOURCE_1_EXT_SOURCE_2_diff <- tr3$EXT_SOURCE_1 - tr3$EXT_SOURCE_2
tr3$EXT_SOURCE_1_EXT_SOURCE_3_diff <- tr3$EXT_SOURCE_1 - tr3$EXT_SOURCE_3
tr3$EXT_SOURCE_2_EXT_SOURCE_3_diff <- tr3$EXT_SOURCE_2 - tr3$EXT_SOURCE_3
tr3$EXT_SOURCE_1_EXT_SOURCE_2_abs_diff <- abs(tr3$EXT_SOURCE_1 - tr3$EXT_SOURCE_2)
tr3$EXT_SOURCE_1_EXT_SOURCE_3_abs_diff <- abs(tr3$EXT_SOURCE_1 - tr3$EXT_SOURCE_3)
tr3$EXT_SOURCE_2_EXT_SOURCE_3_abs_diff <- abs(tr3$EXT_SOURCE_2 - tr3$EXT_SOURCE_3)
View(tr3)
cor(tr3$EXT_SOURCE_1, tr3$TARGET)
cor(tr3$EXT_SOURCE_1, tr3$TARGET, use = "na.or.complete")
cor(tr3$EXT_SOURCE_2, tr3$TARGET, use = "na.or.complete")
cor(tr3$EXT_SOURCE_1_EXT_SOURCE_2_diff, tr3$TARGET, use = "na.or.complete")
cor(tr3$EXT_SOURCE_1_EXT_SOURCE_2_abs_diff, tr3$TARGET, use = "na.or.complete")
cor(tr3$EXT_SOURCE_3, tr3$TARGET, use = "na.or.complete")
cor(tr3$EXT_SOURCE_1_EXT_SOURCE_3_abs_diff, tr3$TARGET, use = "na.or.complete")
cor(tr3$EXT_SOURCE_1_EXT_SOURCE_3_diff, tr3$TARGET, use = "na.or.complete")
cor(tr3$EXT_SOURCE_2_EXT_SOURCE_3_diff, tr3$TARGET, use = "na.or.complete")
print("a")
for (col in colnames(tr2)) {
print(paste(col, ":", length(unique(tr2[[col]]))))
}
count_df <- data.frame(feature = colnames(tr2))
count_lst <- c()
for (col in colnames(tr2)) {
count_lst <- c(count_lst, length(unique(tr2[[col]])))
}
count_df$count <- count_lst
View(count_df)
unique(tr2$EMERGENCYSTATE_MODE)
unique(tr2$HOUSETYPE_MODE)
unique(tr2$FONDKAPREMONT_MODE)
unique(tr2$WALLSMATERIAL_MODE)
unique(tr2$FLOORSMAX_MODE)
sort(unique(tr2$FLOORSMAX_MODE))
sort(unique(tr2$FLOORSMAX_MODE)) / 0.0417
round(sort(unique(tr2$FLOORSMAX_MODE)) / 0.0417)
sort(unique(tr2$FLOORSMIN_MODE))
sort(unique(tr2$ELEVATORS_MODE))
round(sort(unique(tr2$ELEVATORS_MODE)) / 0.0403)
sort(unique(tr2$ELEVATORS_MODE)) / 0.0403
sort(unique(tr2$ENTRANCES_MODE))
sort(unique(tr2$ENTRANCES_MODE)) / 0.0345
sort(unique(tr2$ELEVATORS_MEDI))
sort(unique(tr2$ELEVATORS_MEDI)) / 0.02
sort(unique(tr2$ENTRANCES_MEDI))
sort(unique(tr2$ENTRANCES_MEDI)) / 0.0172
round(sort(unique(tr2$ENTRANCES_MEDI)) / 0.0172)
sort(unique(tr2$FLOORSMIN_MEDI))
round(sort(unique(tr2$FLOORSMIN_MEDI)) / 0.0208)
sort(unique(tr2$FLOORSMAX_MEDI))
sort(unique(tr2$YEARS_BUILD_AVG))
sort(unique(tr2$YEARS_BUILD_AVG)) / 0.0004
2500/365
18+17
52-35
(sort(unique(tr2$YEARS_BUILD_AVG)) / 0.0004) - 1
((sort(unique(tr2$YEARS_BUILD_AVG)) / 0.0004) - 1) / 17
sort(unique(tr2$YEARS_BUILD_MEDI))
(sort(unique(tr2$YEARS_BUILD_AVG)) / 0.0003)
46.666667-24
69.333333-46.666667
(sort(unique(tr2$YEARS_BUILD_AVG)) / 0.0003) / 22.66667
(sort(unique(tr2$YEARS_BUILD_MEDI)) / 0.0003)
((sort(unique(tr2$YEARS_BUILD_MEDI)) / 0.0003) - 1)
((sort(unique(tr2$YEARS_BUILD_MEDI)) / 0.0003) - 1) / 22.66667
sort(unique(tr2$YEARS_BUILD_MODE))
((sort(unique(tr2$YEARS_BUILD_MEDI)) / 0.0003) - 1)
((sort(unique(tr2$YEARS_BUILD_MEDI)) / 0.0003) - 1) / 22.66667
((sort(unique(tr2$YEARS_BUILD_MODE)) / 0.0003) - 1)
((sort(unique(tr2$YEARS_BUILD_MODE)) / 0.0003) - 1) / 22.66667
sort(unique(tr2$NONLIVINGAPARTMENTS_MODE))
sort(unique(tr2$NONLIVINGAPARTMENTS_MODE)) / 0.0039
sort(unique(tr2$NONLIVINGAPARTMENTS_MEDI)) / 0.0039
sort(unique(tr2$NONLIVINGAPARTMENTS_MEDI))
sort(unique(tr2$NONLIVINGAPARTMENTS_MEDI)) / 0.0019
sort(unique(tr2$YEARS_BEGINEXPLUATATION_MODE))
sort(unique(tr2$YEARS_BEGINEXPLUATATION_MODE)) / 0.0005
90.4/36.8
89.4/35.8
(sort(unique(tr2$YEARS_BEGINEXPLUATATION_MODE)) / 0.0005) - 1
((sort(unique(tr2$YEARS_BEGINEXPLUATATION_MODE)) / 0.0005) - 1) / 35.8
sort(unique(tr2$ELEVATORS_AVG))
sort(unique(tr2$ELEVATORS_AVG)) / 0.002
(sort(unique(tr2$ELEVATORS_AVG)) / 0.002) * 5
0.002 * 5
(sort(unique(tr2$ELEVATORS_AVG)) / 0.01)
0.002 / 5
(sort(unique(tr2$ELEVATORS_AVG)) / 4e-4)
(sort(unique(tr2$ELEVATORS_AVG)) / 4e-4) - 1
(sort(unique(tr2$ELEVATORS_AVG)) / 4e-4)
(sort(unique(tr2$ELEVATORS_AVG)) / 4e-2)
(sort(unique(tr2$ELEVATORS_AVG)) / 4e-4)
(sort(unique(tr2$ELEVATORS_AVG)) / 4e-4) - 5
(sort(unique(tr2$ELEVATORS_AVG)) / 4e-4)
(sort(unique(tr2$ELEVATORS_MODE)) / .00403)
(sort(unique(tr2$ELEVATORS_MODE)) / 0.0403)
round((sort(unique(tr2$ELEVATORS_MODE)) / 0.0403))
(sort(unique(tr2$ELEVATORS_AVG)) / 4e-2)
round((sort(unique(tr2$ELEVATORS_AVG)) / 4e-2))
4e-2 == 0.04
sort(unique(tr2$ENTRANCES_AVG))
sort(unique(tr2$ENTRANCES_AVG)) / 0.0055
(sort(unique(tr2$ENTRANCES_AVG)) / 0.0055) - 1
((sort(unique(tr2$ENTRANCES_AVG)) / 0.0055) - 1) / 0.5636364
sort(unique(tr2$ENTRANCES_MODE)) / 0.0345
((sort(unique(tr2$ENTRANCES_AVG)) / 0.0055) - 1)
180/29
((sort(unique(tr2$ENTRANCES_AVG)) / 0.0055) - 1)
((sort(unique(tr2$ENTRANCES_AVG)) / 0.0055) - 1) / 30
((sort(unique(tr2$ENTRANCES_AVG)) / 0.0055) - 1) / 6
((sort(unique(tr2$ENTRANCES_AVG)) / 0.0345
)
(sort(unique(tr2$ENTRANCES_AVG)) / 0.0345)
(sort(unique(tr2$ENTRANCES_MEDI)) / 0.0172)
(sort(unique(tr2$ENTRANCES_MEDI)) / 0.0172) / 2
(sort(unique(tr2$ENTRANCES_MODE)) / 0.0172) / 2
(sort(unique(tr2$ENTRANCES_MODE)) / 0.0172)
(sort(unique(tr2$ENTRANCES_MEDI)) / 0.0345)
sort(unique(tr2$YEARS_BEGINEXPLUATATION_AVG))
sort(unique(tr2$YEARS_BEGINEXPLUATATION_AVG)) / 0.0179
((sort(unique(tr2$YEARS_BEGINEXPLUATATION_MODE)) / 0.0005) - 1) / 35.8
sort(unique(tr2$YEARS_BEGINEXPLUATATION_MEDI))
sort(unique(tr2$YEARS_BEGINEXPLUATATION_MODE))
(sort(unique(tr2$YEARS_BEGINEXPLUATATION_MODE)) / 0.0179)
(sort(unique(tr2$YEARS_BEGINEXPLUATATION_MEDI)) / 0.0179)
sort(unique(tr2$YEARS_BEGINEXPLUATATION_MEDI))
sort(unique(tr2$FLOORSMIN_AVG))
sort(unique(tr2$FLOORSMIN_AVG)) / 0.0067
sort(unique(tr2$FLOORSMIN_MODE)) / 0.0417
(sort(unique(tr2$FLOORSMIN_AVG)) / 0.0067) - 1
1.3582090 - 1.0597015
135.8208955 - 133.7014925
2.119403 / 0.2985075
((sort(unique(tr2$FLOORSMIN_AVG)) / 0.0067) - 1) / 0.2985075
tr2$FLOORSMIN_MODE <- round(tr2$FLOORSMIN_MODE / 0.0417)
View(tr2)
sort(unique(tr2$FLOORSMIN_AVG)) / 0.0208
sort(unique(tr2$FLOORSMIN_AVG)) / 0.0208
tr2 <- select(tr, home_related_features)
View(tr2)
.0417/.0208
tr2$FLOORSMIN_AVG <- round(tr2$FLOORSMIN_AVG / 0.0208)
tr2$FLOORSMIN_MODE <- round(tr2$FLOORSMIN_MODE / 0.0208)
tr2$FLOORSMIN_MEDI <- round(tr2$FLOORSMIN_MEDI / 0.0208)
tr2$FLOORSMAX_AVG <- round(tr2$FLOORSMAX_AVG / 0.0208)
tr2 <- select(tr, home_related_features)
sort(unique(tr2$FLOORSMAX_MODE))
sort(unique(tr2$FLOORSMIN_MODE))
sort(unique(tr2$ELEVATORS_MEDI))
sort(unique(tr2$ELEVATORS_MODE))
sort(unique(tr2$ELEVATORS_AVG))
sort(unique(tr2$ELEVATORS_AVG)) / 0.04
sort(unique(tr2$ELEVATORS_MODE)) / 0.0403
tr2$ELEVATORS_MODE <- round(tr2$ELEVATORS_MODE / 0.0403)
View(tr2)
tr2$ELEVATORS_MEDI <- round(tr2$ELEVATORS_MEDI / 0.0403)
tr2$ELEVATORS_AVG <- round(tr2$ELEVATORS_AVG / 0.0403)
tr2$YEARS_BUILD_AVG <- ((tr2$YEARS_BUILD_AVG / 0.0004) - 1) / 17
tr2$YEARS_BUILD_MEDI <- ((tr2$YEARS_BUILD_MEDI / 0.0003) - 1) / 22.66667
tr2$YEARS_BUILD_MODE <- ((tr2$YEARS_BUILD_MODE / 0.0003) - 1) / 22.66667
sort(unique(tr2$NONLIVINGAPARTMENTS_AVG))
sort(unique(tr2$NONLIVINGAPARTMENTS_AVG)) / 0.0019
sort(unique(tr2$NONLIVINGAPARTMENTS_AVG)) / 0.0039
sort(unique(tr2$TOTALAREA_MODE))
sort(unique(tr2$TOTALAREA_MODE)) / 0.0001
max(sort(unique(tr2$TOTALAREA_MODE)) / 0.0001)
sort(unique(tr2$LIVINGAREA_MODE))
sort(unique(tr2$LIVINGAREA_MODE)) / 0.0001
max(sort(unique(tr2$LIVINGAREA_MODE)) / 0.0001)
hist(sort(unique(tr2$LIVINGAREA_MODE)) / 0.0001, 100)
hist(sort(unique(tr2$LIVINGAREA_MODE)), 100)
library(readr)
data <- read_csv("E:/data.csv")
View(data)
data$X1 <- NULL
library(readr)
installements <- read_csv("E:/installements.csv")
View(installements)
installements$X1 <- NULL
library(readr)
previous_loans <- read_csv("E:/previous_loans.csv")
View(previous_loans)
previous_loans$WEEKDAY_APPR_PROCESS_START <- NULL
previous_loans$HOUR_APPR_PROCESS_START <- NULL
previous_loans$NAME_TYPE_SUITE <- NULL
139887.0+15543
table(previous_loans$target, previous_loans$NFLAG_INSURED_ON_APPROVAL)
df <- previous_loans[previous_loans$SK_ID_PREV == 1103286, ]
900000/45000
9000/61258
9000/66231
df <- previous_loans[previous_loans$SK_ID_CURR == 100477, ]
View(df)
18*13417
View(previous_loans)
library(readr)
stats_24072018 <- read_csv("E:/stats_24072018.csv")
View(stats_24072018)
library(readr)
highly_correlated_features <- read_csv("E:/highly_correlated_features.csv")
View(highly_correlated_features)
library(readr)
stats <- read_csv("E:/stats.csv")
View(stats)
colnames(stats) <- c("feature", "nb_nas", "nb_levels")
stats <- subset(stats, nb_levels > 1)
library(readr)
stats <- read_csv("E:/stats.csv")
View(stats)
colnames(stats) <- c("feature", "nb_nas", "nb_levels")
colnames(stats) <- c("feature", "nb_nas", "nb_levels", "target_correlation")
stats <- subset(stats, nb_levels > 1)
library(readr)
extract <- read_csv("E:/extract.csv")
View(extract)
library(readr)
extract <- read_csv("E:/extract.csv")
View(extract)
import(dplyr)
library(dplyr)
stats <- left_join(stats, extract, by = "feature")
View(stats)
stats <- subset(stats, feature != "SK_ID_CURR")
stats <- subset(stats, nb_levels > 1)
258601 / 305811
225000 / 305811
305811*.8
stats <- subset(stats, nb_nas < 244648.8)
View(stats)
stats$feature[stats$importance == 0]
subset(stats, importance == 0)
subset(stats, importance == 0)$feature
stats <- subset(stats, !(feature %in% c("bureau_CNT_CREDIT_PROLONG_nunique", "bureau_bureau_balance_MONTHS_BALANCE_max_max", "bureau_bureau_balance_STATUS_nunique_nunique", "bureau_bureau_balance_STATUS_2_nunique", "bureau_CREDIT_ACTIVE_Active_nunique", "bureau_CREDIT_CURRENCY_OrdinalEncoder_min", "bureau_CREDIT_TYPE_Mortgage_min")))
View(stats)
stats2 <- subset(stats, is.na(importance))
View(stats2)
stats2$feature
stats <- subset(stats, !is.na(importance))
View(stats)
write.csv(stats, "E:/tmp.csv")
library(readr)
extract <- read_csv("E:/extract.csv")
View(extract)
previous_application_stats <- read_csv("E:/previous_application_stats.csv")
colnames(previous_application_stats) <- c("feature", "nb_nas", "nb_levels", "target_correlation")
#previous_application_stats <- subset(previous_application_stats, nb_levels > 1)
previous_application_stats <- subset(previous_application_stats, feature != "SK_ID_CURR")
previous_application_stats <- read_csv("E:/previous_application_stats.csv")
View(previous_application_stats)
previous_application_stats <- read_csv("E:/previous_application_stats.csv")
colnames(previous_application_stats) <- c("feature", "nb_nas", "nb_levels", "target_correlation")
previous_application_stats <- subset(previous_application_stats, nb_levels > 1)
previous_application_stats <- subset(previous_application_stats, feature != "SK_ID_CURR")
View(previous_application_stats)
previous_application_stats <- read_csv("E:/previous_application_stats.csv")
colnames(previous_application_stats) <- c("feature", "nb_nas", "nb_levels", "target_correlation")
previous_application_stats <- subset(previous_application_stats, nb_levels > 1)
previous_application_stats <- subset(previous_application_stats, feature != "SK_ID_CURR")
extract <- read_csv("E:/extract.csv")
previous_application_stats <- left_join(previous_application_stats, extract, by = "feature")
View(previous_application_stats)
stats2 <- subset(previous_application_stats, (importance == 0) || (is.na(importance)))
stats2 <- subset(previous_application_stats, (importance == 0) | (is.na(importance)))
View(stats2)
stats2$feature
tmp <- sapply(stats2$feature, function(x) sub(pattern = "previous_application_", replacement = "", x = x)
)
tmp
tmp <- as.character(sapply(stats2$feature, function(x) sub(pattern = "previous_application_", replacement = "", x = x)))
tmp <- as.character(sapply(tmp, function(x) sub(pattern = "_mean$", replacement = "", x = x)))
tmp <- as.character(sapply(tmp, function(x) sub(pattern = "_std$", replacement = "", x = x)))
tmp <- as.character(sapply(tmp, function(x) sub(pattern = "_min$", replacement = "", x = x)))
tmp <- as.character(sapply(tmp, function(x) sub(pattern = "_max$", replacement = "", x = x)))
tmp <- as.character(sapply(tmp, function(x) sub(pattern = "_sum$", replacement = "", x = x)))
tmp <- as.character(sapply(tmp, function(x) sub(pattern = "_nunique$", replacement = "", x = x)))
table(tmp)
counts <- table(tmp)
counts_df <- data.frame(feature = names(table(tmp)), count = as.integer(table(tmp)))
View(counts_df)
subset(counts_df, count == 6)$feature
subset(counts_df, count == 6)
a <- subset(counts_df, count == 6)
a$feature
counts_df$feature <- as.character.factor(counts_df$feature)
a <- subset(counts_df, count == 6)
a <- sapply(a, function(x) paste0("previous_application_", x))
useless_feats <- sapply(a, function(x) paste0(x, "_mean"))
View(a)
a <- subset(counts_df, count == 6)
a <- a$feature
a <- sapply(a, function(x) paste0("previous_application_", x))
useless_feats <- sapply(a, function(x) paste0(x, "_mean"))
a <- subset(counts_df, count == 6)
a <- a$feature
a <- as.character(sapply(a, function(x) paste0("previous_application_", x)))
useless_feats <- as.character(sapply(a, function(x) paste0(x, "_mean")))
useless_feats <- c(useless_feats, as.character(sapply(a, function(x) paste0(x, "_std"))))
useless_feats <- c(useless_feats, as.character(sapply(a, function(x) paste0(x, "_min"))))
useless_feats <- c(useless_feats, as.character(sapply(a, function(x) paste0(x, "_max"))))
useless_feats <- c(useless_feats, as.character(sapply(a, function(x) paste0(x, "_sum"))))
useless_feats <- c(useless_feats, as.character(sapply(a, function(x) paste0(x, "_nunique"))))
stats3 <- subset(stats2, !(feature %in% useless_feats))
View(stats3)
stats3$feature
s <- ""
for (f in stats3$feature) {}
for (f in stats3$feature) { paste0("\"", f, "\", ") }
for (f in stats3$feature) { s <- c(s, paste0("\"", f, "\", ")) }
s <- ""
for (f in stats3$feature) { s <- c(s, paste0(", f, ",)) }
for (f in stats3$feature) { s <- c(s, paste0('"', f, '", ')) }
s <- ""
for (f in stats3$feature) { s <- c(s, paste0('"', f, '", ')) }
for (f in stats3$feature) { s <- paste0(s, '"', f, '", ')) }
s <- ""
for (f in stats3$feature) { s <- paste0(s, '"', f, '", ') }
s
f <- c("previous_application_credit_length_months_nunique", "previous_application_NAME_CASH_LOAN_PURPOSE_XAP_std", "previous_application_NAME_CASH_LOAN_PURPOSE_XAP_nunique", "previous_application_PRODUCT_COMBINATION_NA_mean", "previous_application_PRODUCT_COMBINATION_NA_std", "previous_application_PRODUCT_COMBINATION_NA_sum", "previous_application_PRODUCT_COMBINATION_NA_nunique", "previous_application_PRODUCT_COMBINATION_NA_max", "previous_application_NAME_CONTRACT_TYPE_XNA_max", "previous_application_NAME_CONTRACT_TYPE_XNA_nunique", "previous_application_PRODUCT_COMBINATION_NA_nunique")
stats3 <- subset(previous_application_stats, feature %in% f)
View(stats3)
library(readr)
previous_app <- read_csv("E:/previous_app.csv")
View(previous_app)
library(readr)
extract2 <- read_csv("E:/extract2.csv")
View(extract2)
# Feature selection
library(dplyr)
previous_app <- left_join(previous_app, extract2, by = "feature")
colnames(previous_app) <- c("feature", "nb_nas", "nb_levels", "count_lvl0", "count_lvl1")
previous_app <- left_join(previous_app, extract2, by = "feature")
View(previous_app)
previous_app <- sort(previous_app, importance_rank)
previous_app <- previous_app[order(importance_rank),]
previous_app <- previous_app[order(previous_app$importance_rank),]
View(previous_app)
previous_app$feature[1:15]
library(readr)
stats_2108 <- read_csv("E:/stats_2108.csv")
View(stats_2108)
stats_2108 <- read_csv("E:/stats_2108.csv")
View(stats_2108)
